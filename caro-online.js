let onlineBoardSize = 15;
let onlineBoard = Array(onlineBoardSize * onlineBoardSize).fill(null);
let onlinePlayerSymbol = "";
let onlineCurrentTurn = "‚ùå";
let onlineRoomId = null;
let onlineGameOver = false;

// üåê T·∫£i ch·∫ø ƒë·ªô Online
function loadOnline() {
    onlineResetGame();
    document.getElementById("status").textContent = "üåê Ch·∫ø ƒë·ªô Online ‚Äì T·∫°o ho·∫∑c tham gia ph√≤ng!";
    document.getElementById("online-controls").style.display = "block";
    document.getElementById("resign-btn").style.display = "none";
    document.getElementById("rematch-btn").style.display = "none";
}

// üÜï T·∫°o ph√≤ng
function createRoom() {
    onlineRoomId = Math.random().toString(36).substr(2, 6).toUpperCase();
    onlinePlayerSymbol = "‚ùå"; // Ng∆∞·ªùi t·∫°o ph√≤ng l√† X

    db.collection("rooms").doc(onlineRoomId).set({
        board: onlineBoard,
        currentTurn: "‚ùå",
        gameOver: false,
        players: 1,
        winner: null
    }).then(() => {
        document.getElementById("status").textContent = `üéâ Ph√≤ng ${onlineRoomId} ƒë√£ t·∫°o. Ch·ªù ng∆∞·ªùi tham gia...`;
        navigator.clipboard.writeText(onlineRoomId); // üìã Copy m√£ ph√≤ng t·ª± ƒë·ªông
        alert(`üìã M√£ ph√≤ng ƒë√£ copy: ${onlineRoomId}`);
        document.getElementById("resign-btn").style.display = "inline";
        listenToRoom();
        onlineCreateBoard();
    });
}

// üîó Tham gia ph√≤ng
function joinRoom() {
    const inputCode = document.getElementById("room-code").value.trim().toUpperCase();
    if (!inputCode) return alert("‚ö†Ô∏è Nh·∫≠p m√£ ph√≤ng!");

    db.collection("rooms").doc(inputCode).get().then((doc) => {
        if (doc.exists) {
            const data = doc.data();

            if (data.players >= 2) {
                alert("‚ùå Ph√≤ng ƒë√£ ƒë·ªß ng∆∞·ªùi!");
                return;
            }

            onlineRoomId = inputCode;
            onlinePlayerSymbol = "‚≠ï"; // Ng∆∞·ªùi tham gia l√† O

            db.collection("rooms").doc(onlineRoomId).update({
                players: 2
            });

            document.getElementById("status").textContent = `‚úÖ ƒê√£ tham gia ph√≤ng ${onlineRoomId}. L∆∞·ª£t: ‚ùå`;
            document.getElementById("resign-btn").style.display = "inline";
            listenToRoom();
            onlineCreateBoard();
        } else {
            alert("‚ùå Ph√≤ng kh√¥ng t·ªìn t·∫°i!");
        }
    });
}

// üéß L·∫Øng nghe ph√≤ng
function listenToRoom() {
    db.collection("rooms").doc(onlineRoomId).onSnapshot((doc) => {
        const data = doc.data();
        onlineBoard = data.board;
        onlineCurrentTurn = data.currentTurn;
        onlineGameOver = data.gameOver;

        onlineUpdateBoard();

        if (data.winner) {
            document.getElementById("status").textContent = `üèÜ Ng∆∞·ªùi th·∫Øng: ${data.winner}`;
            document.getElementById("rematch-btn").style.display = "inline";
        } else if (data.players < 2) {
            document.getElementById("status").textContent = `üïê Ch·ªù ng∆∞·ªùi tham gia... M√£ ph√≤ng: ${onlineRoomId}`;
        } else if (!onlineGameOver) {
            document.getElementById("status").textContent = `L∆∞·ª£t: ${onlineCurrentTurn}`;
        } else {
            document.getElementById("status").textContent = "üèÜ Tr√≤ ch∆°i k·∫øt th√∫c!";
            document.getElementById("rematch-btn").style.display = "inline";
        }
    });
}

// üéØ X·ª≠ l√Ω n∆∞·ªõc ƒëi
function onlineHandleMove(index) {
    if (onlineGameOver) return;
    if (onlineBoard[index] !== null) return;
    if (onlineCurrentTurn !== onlinePlayerSymbol) return alert("‚è≥ Ch∆∞a ƒë·∫øn l∆∞·ª£t b·∫°n!");

    onlineBoard[index] = onlinePlayerSymbol;
    onlineCurrentTurn = onlineCurrentTurn === "‚ùå" ? "‚≠ï" : "‚ùå";

    db.collection("rooms").doc(onlineRoomId).update({
        board: onlineBoard,
        currentTurn: onlineCurrentTurn
    });

    if (onlineCheckWinner(onlinePlayerSymbol)) {
        db.collection("rooms").doc(onlineRoomId).update({
            gameOver: true,
            winner: onlinePlayerSymbol
        });
    }
}

// ‚úÖ C·∫≠p nh·∫≠t b√†n c·ªù
function onlineUpdateBoard() {
    onlineBoard.forEach((cell, index) => {
        const cellElement = document.querySelector(`.cell[data-index='${index}']`);
        cellElement.textContent = cell || "";
        cellElement.classList.remove("x", "o");

        if (cell === "‚ùå") cellElement.classList.add("x");
        if (cell === "‚≠ï") cellElement.classList.add("o");
    });
}

// üéâ Ki·ªÉm tra th·∫Øng
function onlineCheckWinner(symbol) {
    const directions = [[0, 1], [1, 0], [1, 1], [1, -1]];

    for (let i = 0; i < onlineBoard.length; i++) {
        if (onlineBoard[i] !== symbol) continue;

        const row = Math.floor(i / onlineBoardSize);
        const col = i % onlineBoardSize;

        for (let [dx, dy] of directions) {
            let count = 1;
            for (let k = 1; k < 5; k++) {
                const newRow = row + dx * k;
                const newCol = col + dy * k;
                const newIndex = newRow * onlineBoardSize + newCol;

                if (
                    newRow >= 0 && newRow < onlineBoardSize &&
                    newCol >= 0 && newCol < onlineBoardSize &&
                    onlineBoard[newIndex] === symbol
                ) {
                    count++;
                } else {
                    break;
                }
            }
            if (count === 5) return true;
        }
    }
    return false;
}

// üè≥Ô∏è B·ªè Cu·ªôc
function resignGame() {
    if (confirm("üè≥Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën b·ªè cu·ªôc?")) {
        db.collection("rooms").doc(onlineRoomId).update({
            gameOver: true,
            winner: onlinePlayerSymbol === "‚ùå" ? "‚≠ï" : "‚ùå"
        });
    }
}

// üîÑ ƒê·∫•u L·∫°i
function rematchGame() {
    onlineBoard = Array(onlineBoardSize * onlineBoardSize).fill(null);
    onlineCurrentTurn = "‚ùå";
    onlineGameOver = false;

    db.collection("rooms").doc(onlineRoomId).update({
        board: onlineBoard,
        currentTurn: "‚ùå",
        gameOver: false,
        winner: null
    });

    document.getElementById("rematch-btn").style.display = "none";
    document.getElementById("status").textContent = "üîÑ ƒê·∫•u L·∫°i B·∫Øt ƒê·∫ßu! L∆∞·ª£t: ‚ùå";
}
// üîÑ Reset b√†n c·ªù Online (d√πng khi b·∫Øt ƒë·∫ßu l·∫°i ho·∫∑c ƒë·ªïi ph√≤ng)
function onlineResetGame() {
    onlineBoard = Array(onlineBoardSize * onlineBoardSize).fill(null);
    onlineCurrentTurn = "‚ùå";
    onlineGameOver = false;
    onlineRoomId = null;
    onlinePlayerSymbol = "";
    
    const boardElement = document.getElementById("board");
    boardElement.innerHTML = ""; // Clear b√†n c·ªù

    document.getElementById("status").textContent = "üåê ƒê√£ reset! T·∫°o ho·∫∑c tham gia ph√≤ng.";
    document.getElementById("resign-btn").style.display = "none";
    document.getElementById("rematch-btn").style.display = "none";
}